class Solution {
public:
    vector<int>father;
    int findFather(int x)
    {
        return x == father[x] ? x : (father[x] = findFather(father[x]));
    }
    void Union(int x, int y)
    {
        x = findFather(x);
        y = findFather(y);
        if (x<y) father[y] = x;
        else father[x] = y;
    } 
    int removeStones(vector<vector<int>>& stones) {
        int n = stones.size();
        int ret = n;
        vector<int> isFather(10001*2,0);
        father.resize(10001*2);
        for(int i=0;i<father.size();i++) father[i] = i;
        for(int i=0;i<n;i++)Union(stones[i][0],stones[i][1]+10001);
        for(int i=0;i<n;i++){
            if(!isFather[findFather(stones[i][0])]){
                ret--;
                isFather[findFather(stones[i][0])] = 1;
            }
        }
        return ret;
    }
};
