class Solution {
public:
    vector<vector<int>> graph_global;
    vector<bool> checked;
    vector<int> ifis;
    bool dfs(int &node){
        bool ret = true;
        if(ifis[node]^-1)return ifis[node];
        checked[node] = true;
        for(int &next_node:graph_global[node]){
            if(checked[next_node])ret = false;
            else ret &= dfs(next_node);
        }
        checked[node] = false;
        ifis[node] = ret;
        return ret;
    }
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        int n = graph.size();
        graph_global = graph;
        vector<int> ret(0);
        checked = vector<bool>(n, 0);
        ifis = vector<int>(n, -1);
        for(int i=0;i<n;i++){
            if(dfs(i))ret.push_back(i);
        }
        return ret;
    }
};
