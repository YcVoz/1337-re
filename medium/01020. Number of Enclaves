class Solution {
public:
    int numEnclaves(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int ret = 0;
        queue<int> q1;
        vector<int> direction = {1, 0, -1, 0, 1};
        for(int i=0;i<m;i++){
            if(grid[i][0])q1.push(i*1000);
            if(grid[i][n-1])q1.push(i*1000+n-1);
        }
        for(int i=1;i<n-1;i++){
            if(grid[0][i])q1.push(i);
            if(grid[m-1][i])q1.push((m-1)*1000+i);
        }
        while(!q1.empty()){
            int now = q1.front();
            int nowx = now/1000;
            int nowy = now%1000;
            q1.pop();
            if(grid[nowx][nowy]){
                grid[nowx][nowy] = 0;
                for(int i=0;i<4;i++){
                    int tmpx = nowx + direction[i];
                    int tmpy = nowy + direction[i+1];
                    if(tmpx>=0 && tmpx<m && tmpy>=0 && tmpy<n && grid[tmpx][tmpy])q1.push(tmpx*1000+tmpy);
                }
            }
        }
        for(auto v:grid)for(auto e:v)if(e)ret++;
        return ret;
    }
};
