class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int ret = 0;
        queue<pair<int,int>> q1;
        vector<int> direction = {1, 0, -1, 0, 1};
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1'){
                    ret++;
                    grid[i][j] = '0';
                    q1.push({i,j});
                    while(!q1.empty()){
                        int x = q1.front().first;
                        int y = q1.front().second;
                        q1.pop();
                        for(int d=0;d<4;d++){
                            int new_x = x+direction[d];
                            int new_y = y+direction[d+1];
                            if(new_x>=0 && new_x<m && new_y>=0 && new_y<n && grid[new_x][new_y]=='1'){
                                grid[new_x][new_y] = '0';
                                q1.push({new_x,new_y});
                            }
                        }
                    }
                }
            }
        }
        return ret;
    }
};
