/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxAncestorDiff(TreeNode* root) {
        int ret = 0;
        travelNode(root, ret, root->val, root->val);
        return ret;
    }
    void travelNode(TreeNode* root, int& ret, int nowMax, int nowMin){
        if(root==NULL)return;
        ret = max(ret, max(nowMax - root->val, root->val-nowMin));
        travelNode(root->left, ret, max(root->val, nowMax), min(root->val, nowMin));
        travelNode(root->right, ret, max(root->val, nowMax), min(root->val, nowMin));
    }
};
