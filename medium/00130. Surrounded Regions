class Solution {
public:
    void solve(vector<vector<char>>& board) {
        int m = board.size();
        int n = board[0].size();
        if(m<=2 || n<=2)return;
        vector<int> direction = {1,0,-1,0,1};
        queue<int> q1;
        for(int i=0;i<m;i++){
            if(board[i][0]=='O')q1.push(i*1000),board[i][0]='Z';
            if(board[i][n-1]=='O')q1.push(i*1000+n-1),board[i][n-1]='Z';
        }
        for(int j=1;j<n-1;j++){
            if(board[0][j]=='O')q1.push(j),board[0][j]='Z';
            if(board[m-1][j]=='O')q1.push((m-1)*1000+j),board[m-1][j]='Z';
        }
        while(!q1.empty()){
            int x = q1.front()/1000;
            int y = q1.front()%1000;
            q1.pop();
            for(int d=0;d<4;d++){
                int x2 = x+direction[d];
                int y2 = y+direction[d+1];
                if(x2>=0 && x2<m && y2>=0 && y2<n && board[x2][y2]=='O'){
                    q1.push(x2*1000+y2);
                    board[x2][y2]='Z';
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='O')board[i][j]='X';
                else if(board[i][j]=='Z')board[i][j]='O';
            }
        }
    }
};
