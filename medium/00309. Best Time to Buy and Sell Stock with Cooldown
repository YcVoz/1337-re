class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        if(n==1)return 0;
        int buyInPrice = 0;
        vector<int> dp0(n,0); //no stock
        vector<int> dp1(n,0); //stock holded
        vector<int> dp2(n,0); //cold down
        dp1[0] -= prices[0];
        for(int i=1;i<n;i++){
            dp1[i] = max(dp0[i-1]-prices[i], dp1[i-1]);
            dp0[i] = max(dp0[i-1], dp2[i-1]);
            dp2[i] = dp1[i-1]+prices[i];
        }
        return max(dp0[n-1], dp2[n-1]);
    }
};
