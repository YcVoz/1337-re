class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        long long ret = 0;
        long long  idx, pos;
        stack<pair<int, int>> s1;
        for(int i=0;i<n;i++){
            while(!s1.empty() && arr[s1.top().first]>arr[i]){
                idx = s1.top().first;
                pos = s1.top().second;
                ret += arr[s1.top().first]*((i-idx)*(idx-pos+1));
                ret %= 1000000007;
                s1.pop();
            }
            if(s1.empty())
                s1.push({i, 0});
            else
                s1.push({i, s1.top().first+1});
        }
        while(!s1.empty()){
            idx = s1.top().first;
            pos = s1.top().second;
            ret += arr[s1.top().first]*((n-idx)*(idx-pos+1));
            ret %= 1000000007;
            s1.pop();
        }
        return ret;
    }
};
