class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int m = s1.size();
        int n = s2.size();
        int o = s3.size();
        if(m+n+o==0)return 1;
        if(o!=m+n)return 0;
        if(n==0)return s1==s3;
        if(m==0)return s2==s3;
        vector<vector<int>> dp(m+1, vector<int>(n+1, 0));
        if(s3[o-1]==s1[m-1])dp[1][0] = 1;
        if(s3[o-1]==s2[n-1])dp[0][1] = 1;
        for(int i=2;i<=m;i++)dp[i][0] = dp[i-1][0]?s3[o-i]==s1[m-i]:0;
        for(int i=2;i<=n;i++)dp[0][i] = dp[0][i-1]?s3[o-i]==s2[n-i]:0;
        for(int i=1;i<=m;i++){
            for(int u=1;u<=n;u++){
                if(s3[o-i-u]==s1[m-i])dp[i][u] = max(dp[i-1][u], dp[i][u]);
                if(s3[o-i-u]==s2[n-u])dp[i][u] = max(dp[i][u-1], dp[i][u]);
            }
        }
        return dp[m][n];
    }
};
