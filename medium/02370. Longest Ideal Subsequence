class Solution {
public:
    int longestIdealString(string s, int k) {
        int n = s.size();
        int now_i;
        int ret = 0;
        vector<int>v1(26, -1);
        vector<int>dp(n, 1);
        for(int i=0;i<n;i++){
            now_i = s[i]-'a';
            if(v1[now_i]!=-1)dp[i] = dp[v1[now_i]]+1; 
            ret = max(ret, dp[i]);
            for(int u = 0;u<=k && now_i-u>=0;u++)
                if(v1[now_i-u]==-1 || dp[v1[now_i-u]]<dp[i])
                    v1[now_i-u] = i;
            for(int u = 0;u<=k && now_i+u<26;u++)
                if(v1[now_i+u]==-1 || dp[v1[now_i+u]]<dp[i])
                    v1[now_i+u] = i;
            v1[now_i] = i;
        }
        return ret;
    }
};
