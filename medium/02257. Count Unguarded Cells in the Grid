class Solution {
public:
    int countUnguarded(int m, int n, vector<vector<int>>& guards, vector<vector<int>>& walls) {
        int ret = 0;
        int nextloc;
        vector<vector<int>> v(m, vector<int>(n, 0));//G:1, W:2, red: 3, green:0
        for(vector<int>&p:guards)v[p[0]][p[1]] = 1;
        for(vector<int>&p:walls)v[p[0]][p[1]] = 2;
        for(int i=0;i<m;i++){
            for(int u=0;u<n;u++){
                if(v[i][u] == 1){
                    nextloc = i-1;
                    while(nextloc>=0 && v[nextloc][u]!=1 && v[nextloc][u]!=2)
                        v[nextloc--][u] = 3;
                    nextloc = i+1;
                    while(nextloc<m && v[nextloc][u]!=1 && v[nextloc][u]!=2)
                        v[nextloc++][u] = 3;
                    nextloc = u-1;
                    while(nextloc>=0 && v[i][nextloc]!=1 && v[i][nextloc]!=2)
                        v[i][nextloc--] = 3;
                    nextloc = u+1;
                    while(nextloc<n && v[i][nextloc]!=1 && v[i][nextloc]!=2)
                        v[i][nextloc++] = 3;
                }
            }
        }
        for(int i=0;i<m;i++)
            for(int u=0;u<n;u++)
                ret += (v[i][u])?0:1;
        return ret;
    }
};
