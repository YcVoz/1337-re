/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ret(0);
        if(!root)
            return ret;
        int sizee = 1;
        queue<TreeNode*> q1;
        q1.push(root);
        while(sizee){
            vector<int> tem(0);
            for(int i=0;i<sizee;i++){
                tem.emplace_back(q1.front()->val);
                if(q1.front()->left)
                    q1.push(q1.front()->left);
                if(q1.front()->right)
                    q1.push(q1.front()->right);
                q1.pop();
            }
            ret.emplace_back(tem);
            sizee = q1.size();
        }
        return ret;
    }
};
