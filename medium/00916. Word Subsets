class Solution {
public:
    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {
        int n1 = words1.size();
        int n2 = words2.size();
        vector<string> ret;
        vector<vector<int>> v1(n1,vector<int>(26,0));
        vector<vector<int>> v2(n2,vector<int>(26,0));
        vector<int> v3(26,0);
        for(int i=0;i<n1;i++)
            for(char c:words1[i])
                v1[i][c-'a']++;
        for(int i=0;i<n2;i++){
            for(char c:words2[i])
                v2[i][c-'a']++;
            for(int k=0;k<26;k++)
                v3[k] = max(v3[k],v2[i][k]);
        }
        for(int i=0;i<n1;i++){
            bool tag = 1;
            for(int k=0;k<26 && tag;k++)
                tag = (v1[i][k]>=v3[k]);
            if(tag)
                ret.emplace_back(words1[i]);
        }
        return ret;
    }
};
