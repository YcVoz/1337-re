class NumMatrix {
public:
    vector<vector<int>> dp;
    NumMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        dp.resize(m);
        for(int i=0;i<m;i++)dp[i].resize(n);
        dp[0][0] = matrix[0][0];
        for(int i=1;i<m;i++)dp[i][0] = dp[i-1][0] + matrix[i][0];
        for(int i=1;i<n;i++)dp[0][i] = dp[0][i-1] + matrix[0][i];
        for(int i=1;i<m;i++)for(int u=1;u<n;u++)
        dp[i][u] = dp[i-1][u]+dp[i][u-1]-dp[i-1][u-1]+matrix[i][u];
    }
    int sumRegion(int row1, int col1, int row2, int col2) {
        if(row1==0 && col1==0)return dp[row2][col2];
        else if(row1==0)return dp[row2][col2]-dp[row2][col1-1];
        else if(col1==0)return dp[row2][col2]-dp[row1-1][col2];
        else return dp[row2][col2]-dp[row2][col1-1]-dp[row1-1][col2]+dp[row1-1][col1-1];
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
