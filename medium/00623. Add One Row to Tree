/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1){
            TreeNode* ret = new TreeNode(val, root, NULL);
            return ret;
        }
        queue<TreeNode*> q1;
        q1.push(root);
        for(int i=2;i<depth;i++){
            int sizee = q1.size();
            for(int u=0;u<sizee;u++){
                TreeNode* tmp = q1.front();
                q1.pop();
                if(tmp->left)q1.push(tmp->left);
                if(tmp->right)q1.push(tmp->right);
            }
        }
        while(!q1.empty()){
            TreeNode* tmp = q1.front();
            q1.pop();
            tmp->left = new TreeNode(val, tmp->left, NULL);
            tmp->right = new TreeNode(val, NULL, tmp->right);
        }
        return root;
    }
};
