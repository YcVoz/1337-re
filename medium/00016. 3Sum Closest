class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int n = nums.size();
        int l,r;
        int ret = 373;
        int diff = 2147483647;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            if(i==0 || nums[i]!=nums[i-1]){
                l = i+1;
                r = n-1;
                if(l<r){
                    if(nums[i]+nums[n-2]+nums[n-1]<target)
                        ret = nums[i]+nums[n-2]+nums[n-1];
                    else if(nums[i]+nums[i+1]+nums[i+2]>target)
                        return (nums[i]+nums[i+1]+nums[i+2]-target<diff)?nums[i]+nums[i+1]+nums[i+2]:diff;
                    else{
                        while(l<r){          
                            if(nums[i]+nums[l]+nums[r]>target)
                                r--;
                            else if(nums[i]+nums[l]+nums[r]<target)
                                l++;
                            else
                                return target;
                            if(abs(nums[i]+nums[l]+nums[r]-target)<diff){
                                diff = abs(nums[i]+nums[l]+nums[r]-target);
                                ret = nums[i]+nums[l]+nums[r];
                            }
                        }
                    }
                }
            }
        }
        return ret;
    }
};
