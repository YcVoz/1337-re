class RandomizedSet {
public:
    vector<int> v1;
    unordered_map<int, int> m1;
    RandomizedSet() {
        v1.resize(0);
        m1.clear();
    }
    bool insert(int val) {
        if (m1.count(val)) return 0;
        v1.push_back(val);
        m1[val] = v1.size() - 1;
        return 1;
    }
    bool remove(int val) {
        if (!m1.count(val)) return 0;
        int last = v1.back();
        m1[last] = m1[val];
        v1[m1[val]] = last;
        v1.pop_back();
        m1.erase(val);
        return 1;
    }
    int getRandom() {
        return v1[rand() % v1.size()];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
