/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        helper(root);
    }
    TreeNode* helper(TreeNode* root){
        TreeNode* tem;
        TreeNode* return_tem;
        if(root==NULL)return NULL;
        if(root->left==NULL && root->right==NULL)return root;
        if(root->left){
            tem = helper(root->left);
            tem->right = root->right;
            root->right = root->left;
            root->left = NULL;
            return_tem = helper(tem->right);
            return return_tem?return_tem:tem;
        }
        else{
            return_tem = helper(root->right);
            return return_tem?return_tem:root;
        }
        return NULL;
    }
};
