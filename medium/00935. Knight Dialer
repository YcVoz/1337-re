class Solution {
public:
    int knightDialer(int n) {
        if(n==1)return 10;
        int ret = -1;
        vector<vector<int>> lindOfDp(2,vector<int>(10,1));
        for(int i=1;i<n;i++){
            lindOfDp[i&1][0] = (lindOfDp[!(i&1)][4]+lindOfDp[!(i&1)][6])%1000000007;
            lindOfDp[i&1][1] = (lindOfDp[!(i&1)][8]+lindOfDp[!(i&1)][6])%1000000007;
            lindOfDp[i&1][2] = (lindOfDp[!(i&1)][7]+lindOfDp[!(i&1)][9])%1000000007;
            lindOfDp[i&1][3] = (lindOfDp[!(i&1)][4]+lindOfDp[!(i&1)][8])%1000000007;
            lindOfDp[i&1][4] = ((lindOfDp[!(i&1)][3]+lindOfDp[!(i&1)][9])%1000000007+lindOfDp[!(i&1)][0])%1000000007;
            lindOfDp[i&1][6] = ((lindOfDp[!(i&1)][1]+lindOfDp[!(i&1)][7])%1000000007+lindOfDp[!(i&1)][0])%1000000007;
            lindOfDp[i&1][7] = (lindOfDp[!(i&1)][2]+lindOfDp[!(i&1)][6])%1000000007;
            lindOfDp[i&1][8] = (lindOfDp[!(i&1)][1]+lindOfDp[!(i&1)][3])%1000000007;
            lindOfDp[i&1][9] = (lindOfDp[!(i&1)][4]+lindOfDp[!(i&1)][2])%1000000007;
        }
        for(int i=0;i<10;i++){
            ret += lindOfDp[(n-1)&1][i];
            ret %= 1000000007;
        }
        return ret;
    }
};
