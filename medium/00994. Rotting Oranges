class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int ret = 0;
        int remain = 0;
        int sizee;
        queue<int> q1;
        vector<int> dir = {1,0,-1,0,1};
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==2)q1.push(100*i+j);
                else if(grid[i][j]==1)remain++;
            }
        }
        sizee = q1.size();
        while(sizee){
            for(int i=0;i<sizee;i++){
                int x = q1.front()/100;
                int y = q1.front()%100;
                q1.pop();
                for(int d=0;d<4;d++){
                    int xx = x + dir[d];
                    int yy = y + dir[d+1];
                    if(xx>=0 && xx<m && yy>=0 && yy<n && grid[xx][yy]==1){
                        q1.push(100*xx+yy);
                        grid[xx][yy]=2;
                        remain--;
                    }
                }
            }
            sizee = q1.size();
            if(sizee)ret++;
        }
        return remain==0?ret:-1;
    }
};
