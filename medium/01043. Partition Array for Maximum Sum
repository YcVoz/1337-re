class Solution {
public:
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        int n = arr.size();
        int temMax = 0;
        vector<int> dp(n, 0);
        for(int i=0;i<k;i++){
            temMax = max(temMax, arr[i]);
            dp[i] = temMax*(i+1);
        }
        for(int i=1;i<n;i++){
            temMax = 0;
            for(int lastSize = 1;lastSize<=k && i-lastSize>=0;lastSize++){
                temMax = max(temMax, arr[i-lastSize+1]);
                dp[i] = max(dp[i-lastSize]+temMax*lastSize, dp[i]);
            }
        }
        return dp[n-1];
    }
};
