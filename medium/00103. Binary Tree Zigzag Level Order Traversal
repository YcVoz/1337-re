/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ret;
        vector<TreeNode*> level;
        bool left2right = 1;
        if(root)level.emplace_back(root);
        while(!level.empty()){
            int n = level.size();
            vector<TreeNode*> level2;
            vector<int> tem(n);
            for(int i=0;i<n;i++){
                tem[i] = level[(left2right)?i:n-1-i]->val;
                if(level[i]->left)level2.emplace_back(level[i]->left);
                if(level[i]->right)level2.emplace_back(level[i]->right);           
            }
            ret.push_back(tem);
            level = level2;
            level2.clear();
            left2right = !left2right;
        }
        return ret;
    }
};
