/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        int qsize, maxv;
        vector<int> ret(0);
        queue<TreeNode*> q1;
        if(!root)return ret;
        q1.push(root);
        while(!q1.empty()){
            qsize = q1.size();
            maxv = INT_MIN;
            for(int i=0;i<qsize;i++){
                maxv = max(maxv, q1.front()->val);
                if(q1.front()->left)q1.push(q1.front()->left);
                if(q1.front()->right)q1.push(q1.front()->right);
                q1.pop();
            }
            ret.push_back(maxv);
        }
        return ret;
    }
};
