class Solution {
public:
    bool makesquare(vector<int>& matchsticks) {
        int n = matchsticks.size();
        int sum = accumulate(matchsticks.begin(), matchsticks.end(), 0);
        int maxCode = pow(2, n);
        vector<int> code_v(0);
        vector<bool> if_code_exist(maxCode, 0);
        if(sum%4)return false;
        sum /= 4;
        for(int code=1;code<maxCode;code++)
            if(isCodePass(matchsticks, code, n, sum))
                code_v.emplace_back(code);
        n = code_v.size();
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if((code_v[i]|code_v[j])==(code_v[i]+code_v[j])){
                    if(if_code_exist[maxCode-1-(code_v[i]|code_v[j])])return true;
                    if_code_exist[code_v[i]|code_v[j]] = true;
                }           
            }
        }
        return false;
    }
    bool isCodePass(vector<int>& matchsticks, int code, int maxBit, int sum){
        int ret = 0;
        for(int bit=0;bit<maxBit;bit++)
            if((1<<bit)&code)ret += matchsticks[bit];
        return ret==sum;
    }
};
