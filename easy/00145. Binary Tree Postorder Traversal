/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        stack<TreeNode*> s1;
        vector<int> v1;        
        if(!root)return v1;
        TreeNode* tmp;
        s1.push(root);
        while(!s1.empty()){
            tmp = s1.top();
            if(tmp->left){
                s1.push(tmp->left);
                tmp->left = NULL;
            }
            else if(tmp->right){
                s1.push(tmp->right);
                tmp->right = NULL;
            }
            else{
                s1.pop();
                v1.push_back(tmp->val);
            }
        }
        return v1;
    }
};
